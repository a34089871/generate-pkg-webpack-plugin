"use strict";var e=require("fs"),t=require("path"),o=require("child_process");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=n(e),r=n(t);const i=(e=new Date)=>e?e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()+" "+(e.getHours()<10?"0"+e.getHours():e.getHours())+":"+(e.getMinutes()<10?"0"+e.getMinutes():e.getMinutes())+":"+(e.getSeconds()<10?"0"+e.getSeconds():e.getSeconds()):"",c=e=>{try{return o.execSync(e).toString().trim()}catch(e){return null}};c("git show -s --format=%H");const a=c("git show -s --format=%H"),u=c("git show -s --format=%cn"),g=c("git show -s --format=%ce"),l=c("git show -s --format=%ce"),m=i(),f={commit:a,commitUserName:u,commitUserMail:g,commitDate:(()=>{const e=c("git show -s --format=%cd");return e?i(new Date(e)):null})(),branch:l},p=process.cwd();module.exports=class{options;constructor(e={filename:"package"}){this.options=e}apply(e){const{webpack:t}=e,o=this.handlePkgJson();o&&e.hooks.compilation.tap("GeneratePkgJsonPlugin",(e=>{const n=`${this.options.filename}.json`;if(!this.options.filename)throw new Error("[generate-pkg-webpack-plugin] filename不能为空字符串");if(t){const{RawSource:s}=t.sources;e.emitAsset(n,new s(o))}else e.assets[n]={source:function(){return o},size:function(){return 19}}}))}handlePkgJson(){const e=r.default.join(p,"package.json");try{const t=s.default.readFileSync(e,"utf-8"),o=JSON.parse(t);return o.buildTime=m,o.commitInfo=JSON.stringify(f),JSON.stringify(o,null,2)}catch(e){throw new Error("[generate-pkg-webpack-plugin] 无法获取根目录下package.json")}}};
